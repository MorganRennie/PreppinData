-- CREATE THE REQUIRED TABLES AND INPUT THE DATA
  
CREATE TABLE WEEK7_CUSTOMERS 
    (
        `Customer ID`	INT,
        `first_name`	VARCHAR(512),
        `last_name`	VARCHAR(512),
        `email`	VARCHAR(512),
        `gender`	VARCHAR(512),
        `First Flight`	VARCHAR(512),
        `Last Date Flown`	VARCHAR(512),
        `Number of Flights`	INT
    );

INSERT INTO WEEK7_CUSTOMERS VALUES();

CREATE TABLE WEEK7_PREPAIR_LOYALTY 
    (
        `Tier Grouping`	INT,
        `Number of Flights`	VARCHAR(512),
        `Tier`	VARCHAR(512),
        `Benefits`	VARCHAR(512)
    );

INSERT INTO WEEK7_PREPAIR_LOYALTY VALUES ();

CREATE TABLE WEEK7_COSTINGS 
    (
        `Benefit`	VARCHAR(512),
        `Cost`	VARCHAR(512)
    );

INSERT INTO WEEK7_COSTINGS VALUES ();
----------------

-- UPDATE THE CUSTOMER DATA SETS TO HAVE READABLE DATES.
UPDATE WEEK7_CUSTOMERS 
    SET `FIRST FLIGHT`=STR_TO_DATE(`FIRST FLIGHT`,'%m/%d/%yy');

UPDATE WEEK7_CUSTOMERS 
    SET `last date flown`=STR_TO_DATE(`last date flown`,'%m/%d/%yy');
----------------

-- CREATE THE PARAMETER FOR TIER NUMBERING
SET @TIER_PARAMETER = 5;


-- USE THE PARAMETER TO TIER THE CUSTOMERS, CALCULATE FLIGHTS PER YEAR, AND FILTER THE DATA SET.
CREATE TABLE TIERED_CUSTOMERS
SELECT 
	*,
	((`NUMBER OF FLIGHTS`- (`NUMBER OF FLIGHTS`% @TIER_PARAMETER))/ @TIER_PARAMETER) AS TIER_P,
	`NUMBER OF FLIGHTS`/(YEAR(`LAST DATE FLOWN`)-YEAR(`FIRST FLIGHT`)+1) AS AVG_FLIGHTS
FROM WEEK7_CUSTOMERS
WHERE `LAST DATE FLOWN`>='2023-02-21';


-- FOR EACH CUSTOMER, GENERATE A LIST OF AVAILABLE BENEFITS.
CREATE TABLE CUSTOMER_BENEFITS AS
SELECT 
	`CUSTOMER ID`,
    BENEFITS
FROM TIERED_CUSTOMERS
JOIN WEEK7_PREPAIR_LOYALTY
	ON TIER_P >= RIGHT(Tier,1)
WHERE `TIER GROUPING` = @TIER_PARAMETER;


-- CLEAN THE BENEFITS COSTING TABLE
CREATE TABLE TIERED_BENEFITS AS
SELECT 
    BENEFIT,
    `TIER GROUPING`, 
    RIGHT(TIER,1) AS TIER, 
    REGEXP_SUBSTR(COST, '[0-9]+') AS COST
FROM WEEK7_COSTINGS
JOIN wWEEK7_PREPAIR_LOYALTY
    ON BENEFITS=BENEFIT;


-- CALCULATE THE ANNUAL COST, AND NUMBER OF CUSTOMERS, FOR EACH TIER.
CREATE TABLE WEEK7_OUTPUT AS
WITH CTE AS (
    SELECT 
        `CUSTOMER ID`, 
        TIER_P, 
        AVG_FLIGHTS, 
        BENEFIT, 
        COST, 
        ROUND  (CASE 
                  WHEN BENEFIT="Â£250 off a flight each Year" 
                  THEN COST ELSE COST*AVG_FLIGHTS END 
                ) AS ANNUAL_COST
    FROM TIERED_CUSTOMERS
    JOIN TIERED_BENEFITS
	    ON TIER_P >= TIER
    WHERE `TIER GROUPING`=@TIER_PARAMETER)

SELECT
    TIER_P AS TIER,
    COUNT(DISTINCT `CUSTOMER ID`) AS NUMBER_OF_CUSTOMERS,
    SUM(ANNUAL_COST) AS YEARLY_COST
FROM CTE
GROUP BY TIER_P;
